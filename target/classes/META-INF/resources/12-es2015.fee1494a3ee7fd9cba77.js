(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{HaBs:function(t,e,a){"use strict";a.r(e),a.d(e,"amplify_authenticator",(function(){return g}));var s=a("BZ0O"),n=a("Nt7R"),i=a("Qycn"),r=a("s1tr"),o=(a("CHJ9"),a("aut5")),u=a("JmXW"),c=a("TESy"),h=a("v4IS");const l=new n.a("Authenticator"),g=class{constructor(t){Object(s.g)(this,t),this.initialAuthState=r.a.SignIn,this.authState=r.a.Loading,this.toastMessage="",this.onAuthStateChange=(t,e)=>{if(void 0===t)return l.error("nextAuthState cannot be undefined");l.info("Inside onAuthStateChange Method current authState:",this.authState),this.authState=t===r.a.SignedOut?this.initialAuthState:t,void 0!==e&&(this.authData=e,l.log("Auth Data was set:",this.authData)),l.info(`authState has been updated to ${this.authState}`)}}async componentWillLoad(){i.a.listen(o.j,({payload:{event:t,data:e}})=>{switch(t){case"cognitoHostedUI":return this.onAuthStateChange(r.a.SignedIn,e);case"cognitoHostedUI_failure":case"parsingUrl_failure":case"signOut":case"customGreetingSignOut":return this.onAuthStateChange(r.a.SignIn,null)}}),i.a.listen(o.i,t=>{const{payload:e}=t;switch(e.event){case o.h:e.message&&(this.toastMessage=e.message);break;case o.a:e.message&&(this.onAuthStateChange(e.message,e.data),this.toastMessage="");break;default:l.warn("Unhandled Auth Event",e.event)}}),Object(c.j)("amplify-authenticator");const t=localStorage.getItem(o.f);localStorage.removeItem(o.f),"true"!==t&&await this.checkUser()}async checkUser(){if(!h.a||"function"!=typeof h.a.currentAuthenticatedUser)throw new Error(o.d);try{const t=await h.a.currentAuthenticatedUser();Object(u.d)(r.a.SignedIn,t)}catch(t){let e=null;try{e=localStorage.getItem(o.k)}catch(t){l.debug("Failed to get the auth state from local storage",t)}try{e===r.a.SignedIn&&await h.a.signOut(),Object(u.d)(this.initialAuthState)}catch(t){l.debug("Failed to sign out",t)}}}renderAuthComponent(t){switch(t){case r.a.SignIn:return Object(s.f)("slot",{name:"sign-in"},Object(s.f)("amplify-sign-in",{federated:this.federated,usernameAlias:this.usernameAlias}));case r.a.ConfirmSignIn:return Object(s.f)("slot",{name:"confirm-sign-in"},Object(s.f)("amplify-confirm-sign-in",{user:this.authData}));case r.a.SignUp:return Object(s.f)("slot",{name:"sign-up"},Object(s.f)("amplify-sign-up",{usernameAlias:this.usernameAlias}));case r.a.ConfirmSignUp:return Object(s.f)("slot",{name:"confirm-sign-up"},Object(s.f)("amplify-confirm-sign-up",{user:this.authData,usernameAlias:this.usernameAlias}));case r.a.ForgotPassword:return Object(s.f)("slot",{name:"forgot-password"},Object(s.f)("amplify-forgot-password",{usernameAlias:this.usernameAlias}));case r.a.ResetPassword:return Object(s.f)("slot",{name:"require-new-password"},Object(s.f)("amplify-require-new-password",{user:this.authData}));case r.a.VerifyContact:return Object(s.f)("slot",{name:"verify-contact"},Object(s.f)("amplify-verify-contact",{user:this.authData}));case r.a.TOTPSetup:return Object(s.f)("slot",{name:"totp-setup"},Object(s.f)("amplify-totp-setup",{user:this.authData}));case r.a.Loading:return Object(s.f)("slot",{name:"loading"},Object(s.f)("div",null,"Loading..."));case r.a.SignedIn:return[Object(s.f)("slot",{name:"greetings"}),Object(s.f)("slot",null)];default:throw new Error(`Unhandled auth state: ${t}`)}}componentDidUnload(){i.a.remove(o.i,t=>{const{payload:e}=t;e.event===o.h&&e.message&&(this.toastMessage=e.message)})}render(){return Object(s.f)(s.a,null,this.toastMessage?Object(s.f)("amplify-toast",{message:this.toastMessage,handleClose:()=>{this.toastMessage=""},"data-test":"authenticator-error"}):null,this.renderAuthComponent(this.authState))}}}}]);